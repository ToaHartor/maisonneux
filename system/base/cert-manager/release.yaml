apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cert-manager
  namespace: cert-manager
spec:
  releaseName: cert-manager
  # targetNamespace: cert-manager
  chart:
    spec:
      chart: cert-manager
      # renovate: datasource=helm depName=cert-manager registryUrl=https://charts.jetstack.io
      version: "1.18.2"
      sourceRef:
        kind: HelmRepository
        name: jetstack
        namespace: flux-system
  interval: 50m
  install:
    createNamespace: true
    remediation:
      retries: 3
  values:
    # https://artifacthub.io/packages/helm/cert-manager/cert-manager?modal=values
    crds:
      enabled: true
      keep: true
    replicaCount: &replicas 2
    podDisruptionBudget:
      enabled: true
      minAvailable: 1

    resources:
      limits:
        cpu: 10m
        memory: 64Mi
      requests:
        cpu: 10m
        memory: 32Mi

    livenessProbe:
      enabled: true

    topologySpreadConstraints:
      # Maximum 1 pod per Proxmox hypervisor
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
        labelSelector:
          matchLabels:
            app.kubernetes.io/instance: cert-manager
            app.kubernetes.io/component: controller
      # Maximum 1 pod per node. If only one worker remains, then only one replica is enough
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/instance: cert-manager
            app.kubernetes.io/component: controller

    webhook:
      replicaCount: *replicas
      podDisruptionBudget:
        enabled: true
        minAvailable: 1
      
      resources:
        limits:
          cpu: 10m
          memory: 64Mi
        requests:
          cpu: 10m
          memory: 32Mi

      topologySpreadConstraints:
        # Maximum 1 pod per Proxmox hypervisor
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: cert-manager
              app.kubernetes.io/component: webhook
        # Maximum 1 pod per node. If only one worker remains, then only one replica is enough
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: cert-manager
              app.kubernetes.io/component: webhook
    
    cainjector:
      replicaCount: *replicas
      podDisruptionBudget:
        enabled: true
        minAvailable: 1

      resources:
        limits:
          cpu: 10m
          memory: 96Mi
        requests:
          cpu: 10m
          memory: 64Mi

      topologySpreadConstraints:
        # Maximum 1 pod per Proxmox hypervisor
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: cert-manager
              app.kubernetes.io/component: cainjector
        # Maximum 1 pod per node. If only one worker remains, then only one replica is enough
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/instance: cert-manager
              app.kubernetes.io/component: cainjector

    # Create internal ClusterIssuer here
    extraObjects:
      - |
        apiVersion: cert-manager.io/v1
        kind: ClusterIssuer
        metadata:
          name: homelab-issuer
          namespace: cert-manager
        spec:
          selfSigned: {}