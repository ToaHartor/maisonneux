apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: snapshot-controller
  namespace: velero
spec:
  releaseName: snapshot-controller
  dependsOn:
    # Needs monitoring CRDs as it is required by some options
    - name: prometheus-operator-crds
      namespace: opentelemetry
    # Requires external-secrets clustersecretstore to create externlsecrets for s3 access
    - name: external-secrets
      namespace: external-secrets
    # Also requires piraeus operator to be deployed
    - name: piraeus-operator
      namespace: piraeus-datastore
  chart:
    spec:
      chart: snapshot-controller
      # renovate: datasource=helm depName=snapshot-controller registryUrl=https://piraeus.io/helm-charts/
      version: "4.1.0"
      sourceRef:
        kind: HelmRepository
        name: piraeus
        namespace: flux-system
  interval: 50m
  install:
    remediation:
      retries: 3
  values:
    # https://github.com/piraeusdatastore/helm-charts/blob/main/charts/snapshot-controller/values.yaml

    controller:
      enabled: true

      replicaCount: 2

      topologySpreadConstraints:
        # Maximum 1 pod per Proxmox hypervisor
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: snapshot-controller
              app.kubernetes.io/instance: snapshot-controller
        # Maximum 1 pod per node. If only one worker remains, then only one replica is enough
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: snapshot-controller
              app.kubernetes.io/instance: snapshot-controller
    
      volumeSnapshotClasses:
        # From https://linbit.com/blog/using-velero-linbit-sds-to-back-up-restore-a-kubernetes-deployment/
        - name: linstor-csi-snapshot-s3
          driver: linstor.csi.linbit.com
          annotations:
            snapshot.storage.kubernetes.io/is-default-class: "true"
          labels:
            velero.io/csi-volumesnapshot-class: "true"
          deletionPolicy: Delete # Retain
          # No need to put parameters as upload is handled by Velero