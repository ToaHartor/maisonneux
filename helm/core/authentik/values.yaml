s3:
  secretName: authentik-s3user
  bucketName: authentik
  endpoint: "http://localhost:9000"
  customDomain: "localhost:9000/authentik"

ingress:
  host: auth.example.com
  certSecret: ingress-tls

authentik:
  # https://github.com/goauthentik/helm/blob/main/charts/authentik/values.yaml
  authentik:
    log_level: debug
    secret_key: TODO # Replaced by fluxcd on installed with the content of authentik-secret-key
    error_reporting:
      enabled: false
    postgresql:
      host: psql-cluster-rw.postgres.svc.cluster.local
      name: authentik
      user: authentik
      password: file:///postgres-creds/password
    redis:
      host: dragonfly-cluster.dragonfly.svc.cluster.local
  blueprints:
    secrets:
  #     - authentik-blueprint
  global:
    addPrometheusAnnotations: true
    
    deploymentStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1

    env:
      - name: AUTHENTIK_REDIS__DB
        value: "15"
      - name: AUTHENTIK_BOOTSTRAP_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: authentik-akadmin
      - name: AUTHENTIK_STORAGE__MEDIA__BACKEND
        value: s3
      - name: AUTHENTIK_STORAGE__MEDIA__S3__SECURE_URLS
        value: "false" # "true" if prod
  server:
    replicas: 1
    pdb:
      enabled: true
      minAvailable: 1
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 512Mi
    ingress:
      ingressClassName: traefik
      enabled: false
      hosts:
        - auth.example.com
    volumes:
      - name: postgres-creds
        secret:
          secretName: &authentik-db-secret authentik-db-creds
    volumeMounts:
      - name: postgres-creds
        mountPath: /postgres-creds
        readOnly: true
  worker:
    replicas: 1
    pdb:
      enabled: true
      minAvailable: 1
    resources:
      limits:
        cpu: 1000m
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 512Mi
    volumes:
      - name: postgres-creds
        secret:
          secretName: *authentik-db-secret
    volumeMounts:
      - name: postgres-creds
        mountPath: /postgres-creds
        readOnly: true
  # Disable included postgres and redis
  postgres:
    enabled: false
  redis:
    enabled: false