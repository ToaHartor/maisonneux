s3:
  secretName: &authentik-s3-secret authentik-s3user
  bucketName: &authentik-bucket authentik
  endpoint: &authentik-bucket-endpoint "http://localhost:9000"
  customDomain: &authentik-custom-domain "localhost:9000/authentik"

ingress:
  host: auth.example.com
  certSecret: ingress-tls

authentik:
  authentik:
    log_level: debug
    secret_key: TODO # Replaced by fluxcd on installed with the content of authentik-secret-key
    error_reporting:
      enabled: false
    postgresql:
      host: psql-cluster-rw.postgres.svc.cluster.local
      name: authentik
      user: authentik
      password: file:///postgres-creds/password
    redis:
      host: redis-master.redis.svc.cluster.local
  blueprints:
    secrets:
  #     - authentik-blueprint
  global:
    env:
      - name: AUTHENTIK_REDIS__DB
        value: "15"
      - name: AUTHENTIK_BOOTSTRAP_PASSWORD
        valueFrom:
          secretKeyRef:
            key: password
            name: authentik-akadmin
      - name: AUTHENTIK_STORAGE__MEDIA__BACKEND
        value: s3
      - name: AUTHENTIK_STORAGE__MEDIA__S3__ACCESS_KEY
        valueFrom:
          secretKeyRef:
            key: accessKey
            name: *authentik-s3-secret
      - name: AUTHENTIK_STORAGE__MEDIA__S3__SECRET_KEY
        valueFrom:
          secretKeyRef:
            key: secretKey
            name: *authentik-s3-secret
      - name: AUTHENTIK_STORAGE__MEDIA__S3__BUCKET_NAME
        value: *authentik-bucket
      - name: AUTHENTIK_STORAGE__MEDIA__S3__ENDPOINT
        value: *authentik-bucket-endpoint
      - name: AUTHENTIK_STORAGE__MEDIA__S3__CUSTOM_DOMAIN
        value: *authentik-custom-domain
      - name: AUTHENTIK_STORAGE__MEDIA__S3__SECURE_URLS
        value: "false" # "true" if prod
  server:
    replicas: 1
    ingress:
      ingressClassName: traefik
      enabled: false
      hosts:
        - auth.example.com
    volumes:
      - name: postgres-creds
        secret:
          secretName: &authentik-db-secret authentik-db-creds
    volumeMounts:
      - name: postgres-creds
        mountPath: /postgres-creds
        readOnly: true
  worker:
    replicas: 1
    volumes:
      - name: postgres-creds
        secret:
          secretName: *authentik-db-secret
    volumeMounts:
      - name: postgres-creds
        mountPath: /postgres-creds
        readOnly: true
  # Disable included postgres and redis
  postgres:
    enabled: false
  redis:
    enabled: false