s3:
  secretName: &s3-secret gitea-s3user
  bucketName: &bucket gitea
  endpoint: &bucket-endpoint "localhost:9000"
  customDomain: &custom-domain "localhost:9000/gitea"

database:
  name: gitea
  user: gitea

redis:
  url: redis-master.redis.svc.cluster.local

ingress:
  host: git.example.com
  certSecret: ingress-tls

gitea:
  gitea:
    additionalConfigSources:
      - configMap:
          name: gitea-app-ini
      # - secret:
      #     name: gitea-app-ini-secret
    # Sensitive credentials generated by other resources (psql, minio, gitea oauth...)
    additionalConfigFromEnvs:
      - name: GITEA__DATABASE__PASSWD
        valueFrom:
          secretKeyRef:
            name: gitea-db-creds
            key: password
      - name: GITEA__STORAGE__MINIO_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: *s3-secret
            key: accessKey
      - name: GITEA__STORAGE__MINIO_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: *s3-secret
            key: secretKey
    # TODO : try when cluster is live
    # oauth:
    #   - name: "Authentik"
    #     provider: "openidConnect"
    #    # Existing secret contains key: as accessKey and secret: as secretKey
    #     existingSecret: gitea-oauth-secret
    #     autoDiscoverUrl: "https://auth.example.com/.well-known/openid-configuration"

  # TODO : check signing (trust-manager ?)
  # https://gitea.com/gitea/helm-chart/#configure-commit-signing
  # signing:
  #   enable: true
  #   existingSecret: gitea-gpg-secret

  persistence:
    enabled: false

  # Disable embedded postgresql
  postgresql:
    enabled: false
  postgresql-ha:
    enabled: false
  # Disable embedded valkey
  valkey-cluster:
    enabled: false
  # TODO : Requires prometheus operator
  # https://gitea.com/gitea/helm-chart/#metrics-and-profiling
  # metrics:
  #   enabled: true
  #   serviceMonitor:
  #     enabled: true