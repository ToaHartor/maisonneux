apiVersion: mongodbcommunity.mongodb.com/v1
kind: MongoDBCommunity
metadata:
  name: mongodb-cluster
  namespace: {{ .Values.mongodb.namespace }}
spec:
  members: 3
  # arbiters: 1
  type: ReplicaSet
  version: "6.0.5"
  additionalMongodConfig:
    storage.wiredTiger.engineConfig.journalCompressor: zlib

  security:
    authentication:
      ignoreUnknownUsers: true # users can be added to the deployment through other sources. (not through the CRD) and will not be removed by the agent
      modes:
        - "SCRAM"

    # roles: # custom roles are defined here
    #   - role: testRole
    #     db: admin
    #     privileges:
    #       - resource:
    #           db: "test"
    #           collection: "" # an empty string indicates any collection
    #         actions:
    #           - find
    #     roles: []
  # List of users https://github.com/mongodb/mongodb-kubernetes-operator/blob/master/docs/users.md
  # Corresponding secrets will be declared in ./users-secrets.yaml
  users:
{{- range $username := list "tachi" }}
{{ include "create-mongodb-user" (dict "Database" $username "Name" $username) | indent 6 }}
{{- end }}
  # Agent logging config : only to stdout (to avoid creating another volume for logs)
  agent:
    logFile: /dev/stdout
    logLevel: INFO
    systemLog:
      destination: file
      logAppend: true
      path: /dev/stdout
  # persistent: true
  statefulSet:
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/name: mongodb
      # Volumes
      volumeClaimTemplates:
        - metadata:
            name: data-volume
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi
            storageClassName: {{ .Values.storage.persistentClassName }}
        # Since we can't disable it because "backwards compat", we define another storage class
        - metadata:
            name: logs-volume
          spec:
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi # 10Mi
            # selector:
            #   matchLabels:
            #     type: logs
            storageClassName: {{ .Values.storage.persistentClassName }}
      template:
        metadata:
          # label the pod which is used by the "labelSelector" in podAntiAffinty
          # you can label it witch some other labels as well -- make sure it change the podAntiAffinity labelselector accordingly
          labels:
            app.kubernetes.io/name: mongodb
        spec:
          #  Hostpath volumes are owned by root
          #  but MongoDB containers run as non root
          #  so we use an init container to change the owner of
          #  the directory (init containers run as root)
          initContainers:
            - command:
                - chown
                - -R
                - "2000"
                - /data
              image: busybox
              volumeMounts:
                - mountPath: /data
                  name: data-volume
              securityContext:
                runAsNonRoot: false
                runAsUser: 0
                runAsGroup: 0
              name: change-dir-permissions
          containers:
            - name: mongodb-agent
              # readinessProbe:
              #   failureThreshold: 50
              #   initialDelaySeconds: 10
              resources:
                limits:
                  cpu: 150m
                  memory: 200Mi
                requests:
                  cpu: 50m
                  memory: 100Mi
            - name: mongod
              resources:
                limits:
                  cpu: 200m
                  memory: 200Mi
                requests:
                  cpu: 50m
                  memory: 50Mi
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
                - weight: 100
                  podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                        - key: app.kubernetes.io/name
                          operator: In
                          values:
                            - mongodb
                    topologyKey: kubernetes.io/hostname
