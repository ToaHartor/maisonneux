

database:
  user: grafana
  name: grafana

grafana:
  # https://github.com/grafana/helm-charts/blob/main/charts/grafana/values.yaml
  deploymentStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1

  replicas: 1

  resources:
    limits:
      cpu: 1
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi

  podDisruptionBudget:
    enabled: true
    minAvailable: 1

  admin:
    existingSecret: grafana-admin-creds
    userKey: username
    passwordKey: password

  # GatewayAPI
  route:
    main:
      enabled: true
      
      hostnames:

      parentRefs:
        - name: traefik-gateway
          namespace: traefik
          sectionName: websecure
          kind: Gateway
  
  # Helm sidecar to handle dashboard provisioning with both other helm charts and personal dashboards
  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"
      searchNamespace: ALL
      provider:
        disableDelete: false # true
        allowUiUpdates: false
        foldersFromFileStructure: false
  
  plugins:
    # Datasource plugins
    - victoriametrics-metrics-datasource
    - victoriametrics-logs-datasource

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        # Metrics
        - name: Metrics
          type: victoriametrics-metrics-datasource
          url: http://vmselect-metrics-datastore.monitoring.svc.cluster.local:8481/select/0/prometheus
          access: proxy
          isDefault: true
          editable: false
        - name: Metrics as prometheus
          type: prometheus
          url: http://vmselect-metrics-datastore.monitoring.svc.cluster.local:8481/select/0/prometheus
          access: proxy
          isDefault: false
          editable: false
        # Logs
        - name: Logs
          type: victoriametrics-logs-datasource
          url: http://vlselect-logs-datastore.monitoring.svc.cluster.local:9471
          access: proxy
          isDefault: false
          editable: false
  
  dashboards:
    default:
      # https://grafana.com/grafana/dashboards/14837-authentik/
      authentik:
        gnetId: 14837
        revision: 2
        datasource: Metrics as prometheus
      # https://grafana.com/grafana/dashboards/20340-cert-manager/
      cert-manager:
        gnetId: 20340
        revision: 1
      # https://grafana.com/grafana/dashboards/7362-mysql-overview/
      mariadb-overview:
        gnetId: 7362
        revision: 5
        datasource: Metrics as prometheus
      tekton:
        url: https://raw.githubusercontent.com/jenkins-x-charts/grafana-dashboard/refs/heads/master/charts/grafana-dashboard/dashboards/tekton.json
        curlOptions: -skLf
        datasource: Metrics as prometheus
      # https://grafana.com/grafana/dashboards/12896-radarr-v3/
      radarrv3:
        gnetId: 12896
        revision: 1
        datasource: Metrics as prometheus
      # https://grafana.com/grafana/dashboards/12530-sonarr-v3/
      sonarrv3:
        gnetId: 12530
        revision: 2
        datasource: Metrics as prometheus

  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
      # Add downloaded dashboards in the providers list
      # Dashboards provisioned by sidecar are automatically added, so no need to add them here
      - name: 'downloads'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: true
        editable: false
        options:
          path: /var/lib/grafana/dashboards/default

  # Content of the grafana.ini file http://docs.grafana.org/installation/configuration/
  grafana.ini:
    app_mode: production
    instance_name: homelab
    analytics:
      reporting_enabled: false
    
    database:
      # Connection url is built in pqsl-extsecret.yaml
      type: postgres
      url: $__file{/etc/secrets/postgres_db_creds/connectionUrl}
      ssl_mode: disable

    auth:
      signout_redirect_url:
    
    auth.generic_oauth:
      enabled: true
      name: Authentik
      use_pkce: true
      allow_sign_up: true
      client_id: $__file{/etc/secrets/auth_generic_oauth/clientID}
      client_secret: $__file{/etc/secrets/auth_generic_oauth/clientSecret}
      scopes: openid profile email
      auth_url:
      token_url:
      api_url: 
      tls_skip_verify_insecure: true
      # Depends on groups assigned to users in Authentik
      role_attribute_path: "contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'"

    users:
      allow_sign_up: false
      auto_assign_org: true
      auto_assign_org_id: 1
    #   auto_assign_org_role: Viewer

  extraSecretMounts:
    - name: postgres-db-creds
      mountPath: /etc/secrets/postgres_db_creds
      secretName: grafana-db-creds
      readOnly: true
    - name: auth-generic-oauth
      mountPath: /etc/secrets/auth_generic_oauth
      secretName: grafana-oidc-authentik-application
      readOnly: true