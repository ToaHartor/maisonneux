---
apiVersion: mongodbcommunity.mongodb.com/v1
kind: MongoDBCommunity
metadata:
  name: {{ .Values.database.name }}
  namespace: {{ .Release.Namespace }}
spec:
  members: 3
  type: ReplicaSet
  version: "6.0.5"
  security:
    authentication:
      modes: ["SCRAM"]
  users:
    - name: admin
      db: admin
      passwordSecretRef: # a reference to the secret that will be used to generate the user's password
        name: mongodb-admin-secret
      roles:
        - name: clusterAdmin
          db: admin
        - name: userAdminAnyDatabase
          db: admin
      # Scram credentials are created by the operator (name is $secretName-scram-credentials)
      scramCredentialsSecretName: admin
    {{- range $user := .Values.database.users }}
    - name: {{ $user }}
      db: {{ $user }}  # In our case, we don't really need to have more than one database per user
      passwordSecretRef:
        name: {{ $user }}-mongodb-secret
      roles:
        - name: readWrite
          db: {{ $user }}
      scramCredentialsSecretName: {{ $user }}
    {{- end }}  
  additionalMongodConfig:
    storage.wiredTiger.engineConfig.journalCompressor: zlib

  statefulSet:
    spec:
      template:
        spec:
          containers:
            - name: mongod
              resources:
                limits:
                  cpu: "0.2"
                  memory: 250M
                requests:
                  cpu: "0.2"
                  memory: 200M
            - name: mongodb-agent
              resources:
                limits:
                  cpu: "0.2"
                  memory: 150M
                requests:
                  cpu: "0.2"
                  memory: 100M
          initContainers:
            - name: mongodb-agent-readinessprobe
              resources:
                limits:
                  cpu: "0.5"
                  memory: 100M
                requests:
                  cpu: "0.2"
                  memory: 50M
      #     containers:
      #       - name: mongodb-agent
      #         volumes:
      #           - mountPath: /var/log/mongodb-mms-automation                                                                                                                                                                                  │
      # │           name: logs-volume
      volumeClaimTemplates:
        - metadata:
            name: data-volume
          spec:
            resources:
              requests:
                storage: {{ .Values.storage.size }}
            storageClassName: {{ .Values.storage.persistentClassName }}
        # Logs pvc is mandatory, terrifying
        - metadata:
            name: logs-volume
          spec:
            resources:
              requests:
                storage: {{ .Values.storage.logsSize }}
            storageClassName: {{ .Values.storage.persistentClassName }}


