{{- $podEnv := .Values.seafile.workload.main.podSpec.containers.main.env }}
{{- $serviceUrl := printf "%s://%s" $podEnv.SEAFILE_SERVER_PROTOCOL .Values.seafile.serverDomain -}}
apiVersion: v1
kind: Secret
metadata:
  name: seafile-config
  namespace: {{ .Release.Namespace }}
type: Opaque
stringData:
  seafile.conf: |
    [fileserver]
    port = 8082
    max_upload_size=100000
    max_download_dir_size=100000

    [database]
    type = mysql
    host = {{ $podEnv.SEAFILE_MYSQL_DB_HOST }}
    port = {{ $podEnv.SEAFILE_MYSQL_DB_PORT }}
    user = {{ .Values.seafile.mariadb.mariadbUsername }}
    password = {{ .Values.seafile.mariadb.password }}
    db_name = {{.Values.seafile.mariadb.mariadbDatabase }}
    connection_charset = utf8
  seafdav.conf: |
    [WEBDAV]
    enabled = true
    port = 8080
    share_name = /seafdav
    workers = 5
    fastcgi = false
    # Default is 1200
    timeout = 86400
  seafevents.conf: |
    [DATABASE]
    type = mysql
    host = {{ $podEnv.SEAFILE_MYSQL_DB_HOST }}
    port = {{ $podEnv.SEAFILE_MYSQL_DB_PORT }}
    username = {{ .Values.seafile.mariadb.mariadbUsername }}
    password = {{ .Values.seafile.mariadb.password }}
    name = {{ $podEnv.SEAFILE_MYSQL_DB_SEAHUB_DB_NAME }}

    [SEAHUB EMAIL]
    enabled = true

    ## interval of sending Seahub email. Can be s(seconds), m(minutes), h(hours), d(days)
    interval = 30m

    # Enable statistics
    [STATISTICS]
    enabled=true

    # Enable file history
    [FILE HISTORY]
    enabled = true
    suffix = md,txt,doc,docx,xls,xlsx,ppt,pptx,sdoc

  gunicorn.conf.py: |
    import os

    daemon = True
    workers = 5

    # default localhost:8000
    bind = "127.0.0.1:8000"

    # Pid
    pids_dir = '/opt/seafile/pids'
    pidfile = os.path.join(pids_dir, 'seahub.pid')

    # for file upload, we need a longer timeout value (default is only 30s, too short)
    timeout = 1200

    limit_request_line = 8190

    # for forwarder headers
    # forwarder_headers = 'SCRIPT_NAME,PATH_INFO,REMOTE_USER'

  ccnet.conf: |
    [General]
    SERVICE_URL = {{ $serviceUrl }}

    [Database]
    ENGINE = mysql
    HOST = {{ $podEnv.SEAFILE_MYSQL_DB_HOST }}
    PORT = {{ $podEnv.SEAFILE_MYSQL_DB_PORT }}
    USER = {{ .Values.seafile.mariadb.mariadbUsername }}
    PASSWD = {{ .Values.seafile.mariadb.password }}
    DB = {{ $podEnv.SEAFILE_MYSQL_DB_CCNET_DB_NAME }}
    CONNECTION_CHARSET = utf8

  seahub_settings.py: |
    # -*- coding: utf-8 -*-
    SECRET_KEY = "{{ .Values.seafile.fluxcd.jwtSecret }}"
    SERVICE_URL = "{{ $serviceUrl }}"

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': '{{ $podEnv.SEAFILE_MYSQL_DB_SEAHUB_DB_NAME }}',
            'USER': '{{ .Values.seafile.mariadb.mariadbUsername }}',
            'PASSWORD': '{{ .Values.seafile.mariadb.password }}',
            'HOST': '{{ $podEnv.SEAFILE_MYSQL_DB_HOST }}',
            'PORT': '{{ $podEnv.SEAFILE_MYSQL_DB_PORT }}',
            'OPTIONS': {'charset': 'utf8mb4'},
        }
    }


    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.redis.RedisCache',
            'LOCATION': 'redis://{{ $podEnv.CLUSTER_INIT_MEMCACHED_HOST }}:6379',
        },
        'locmem': {
            'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        },
    }
    COMPRESS_CACHE_BACKEND = 'locmem'

    TIME_ZONE = '{{ $podEnv.TIME_ZONE }}'
    FILE_SERVER_ROOT = '{{ $serviceUrl }}/seafhttp'

    # Cloud mode
    CLOUD_MODE = True

    # Disable global address book
    ENABLE_GLOBAL_ADDRESSBOOK = False

    CSRF_TRUSTED_ORIGINS = ["{{ $podEnv.SEAFILE_SERVER_PROTOCOL }}://{{ $podEnv.SEAFILE_SERVER_HOSTNAME }}"]

    ENABLE_OAUTH = True

    # Usually OAuth works through SSL layer. If your server is not parametrized to allow HTTPS, some method will raise an "oauthlib.oauth2.rfc6749.errors.InsecureTransportError". Set this to `True` to avoid this error.
    OAUTH_ENABLE_INSECURE_TRANSPORT = True

    # Automatically creates a user in Seafile when they log in for the first time. Defaults to True.
    OAUTH_CREATE_UNKNOWN_USER = True

    # Automatically activate Seafile users when they log in for the first time. Defaults to True.
    OAUTH_ACTIVATE_USER_AFTER_CREATION = True

    # Client id/secret generated by authorization server when you register your client application.
    OAUTH_CLIENT_ID = "{{ .Values.seafile.fluxcd.oidc.clientId }}"
    OAUTH_CLIENT_SECRET = "{{ .Values.seafile.fluxcd.oidc.clientSecret }}"

    # Callback url when user authentication succeeded. Note, the redirect url you input when you register your client application MUST be exactly the same as this value.
    OAUTH_REDIRECT_URL = "{{ $serviceUrl }}/oauth/callback/"

    OAUTH_PROVIDER = 'authentik'
    OAUTH_PROVIDER_DOMAIN = '{{ .Values.seafile.authDomain }}'
    OAUTH_AUTHORIZATION_URL = 'https://{{ .Values.seafile.authDomain }}/application/o/authorize/'
    OAUTH_TOKEN_URL = 'https://{{ .Values.seafile.authDomain }}/application/o/token/'
    OAUTH_USER_INFO_URL = 'https://{{ .Values.seafile.authDomain }}/application/o/userinfo/'
    OAUTH_SCOPE = ["openid", "email", "profile"]
    OAUTH_ATTRIBUTE_MAP = {
      "name": (False, "name"),
      "email": (True, "contact_email"),
      "sub": (True, "uid"),   # Since 11.0 version, Seafile use 'uid' as the external unique identifier of the user.
                              # Different OAuth systems have different attributes, which may be: 'uid' or 'username', etc.
                              # If there is no 'uid' attribute, do not configure this option and keep the 'email' option unchanged,
                              # to be compatible with the login of users of version 11.0 and earlier.
    }