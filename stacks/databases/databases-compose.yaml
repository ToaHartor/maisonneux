version: "3.9"
services:
  # Cloudbeaver
  cloudbeaver:
    image: dbeaver/cloudbeaver:latest
    container_name: cloudbeaver
    networks:
      - database_network
      # - proxy_network
    volumes:
      - ${DATA_FOLDER}/cloudbeaver:/opt/cloudbeaver/workspace
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'curl -sf localhost:8978/status | grep -c ''"health":"ok"'' || exit 1'
        ]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - 8978:8978/tcp
    restart: unless-stopped
  # MariaDB : Nextcloud, Gitea, FireflyIII, Bookstack
  mariadb:
    image: ghcr.io/linuxserver/mariadb:latest
    container_name: mariadb
    networks:
      - database_network
      - cloud_network
      - firefly_network
      - bookstack_network
      - gitea_network
    # user: ${USERID}:${GROUPID}
    volumes:
      - ${DATA_FOLDER}/mariadb:/config:rw
      # - /etc/localtime:/etc/localtime:ro
    # ports:
    #   - 3306:3306/tcp
    environment:
      - PUID=${USERID}
      - PGID=${GROUPID}
      - TZ=${TIMEZONE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DIR=/config
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "--silent"]
      interval: 30s
      retries: 3
      timeout: 30s
    restart: unless-stopped

  # PostgreSQL - Tandoor/Immich
  postgresql:
    image: tensorchord/pgvecto-rs:pg14-v0.2.1 # postgres:14-alpine
    container_name: postgres
    networks:
      - database_network
      - tandoor_network
      - immich_network
      - kaizoku_network
      - outline_network
      - wakapi_network
      - gamevault_network
      - linkwarden_network
    volumes:
      - ${DATA_FOLDER}/postgres:/var/lib/postgresql/data
      # - /etc/localtime:/etc/localtime:ro
    # ports:
    #   - 5432:5432/tcp
    environment: # TODO change with secrets
      - POSTGRES_USER=${PG_ROOT_USER}
      - POSTGRES_PASSWORD=${PG_ROOT_PASSWORD}
      - TZ=${TIMEZONE}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_ROOT_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # InfluxDB2 - Time series database for monitoring
  influxdb:
    image: influxdb:latest #1.8.10
    container_name: influxdb
    networks:
      - database_network
      - monit_network
    volumes:
      # - ${DATA_FOLDER}/InfluxDB:/var/lib/influxdb
      - ${DATA_FOLDER}/influxdb2/config:/etc/influxdb2
      - ${DATA_FOLDER}/influxdb2/data:/var/lib/influxdb2
      # - /etc/localtime:/etc/localtime:ro
    environment:
      # - INFLUXDB_DATA_INDEX_VERSION=tsi1 # Might need to also be changed in the actual config
      # Init creds
      # - DOCKER_INFLUXDB_INIT_MODE=upgrade
      - INFLUXD_REPORTING_DISABLED=true
      - INFLUXD_UI_DISABLED=true
      # Lowest mean less ram ?
      - INFLUXD_STORAGE_CACHE_SNAPSHOT_MEMORY_SIZE=10485760 # default : 26214400

      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUX_INIT_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUX_INIT_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUX_INIT_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUX_INIT_BUCKET}
    healthcheck:
      test: ["CMD", "curl", "-sf", "http://localhost:8086/ping"]
      interval: 15s
      timeout: 10s
      retries: 5
    ports:
      # Exposing to localhost to be reachable by telegraf and scrutiny
      - 127.0.0.1:8086:8086/tcp
    restart: unless-stopped
  # Redis
  redis:
    image: redis:latest
    container_name: redis
    networks:
      - database_network
      # - cloud_network # Uncomment if nextcloud
      - paperless_network
      - immich_network
      - kaizoku_network
      - outline_network
    # user: "${USERID}:${GROUPID}"
    volumes: # Maybe move to /dev/shm
      - ${DATA_FOLDER}/redis:/data
      # - /etc/passwd:/etc/passwd:ro
    # ports:
    #   - 6379:6379/tcp
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG || exit 1"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    restart: unless-stopped
  # MongoDB for mangatagger, tachi
  mongodb: # you can use your own mongodb, edit the manga-tagger settings.json accordingly
    image: mongo:6
    container_name: mongodb
    networks:
      - database_network
      - mangatagger_network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "echo 'db.stats().ok' | mongosh localhost:27017/test --quiet || exit 1"
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    volumes:
      - ${DATA_FOLDER}/mongodb:/data/db
      - ${DATA_FOLDER}/mongodb/config:/data/configdb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      # - MONGO_INITDB_DATABASE=${MONGO_INIT_DB}
    restart: unless-stopped

networks:
  # proxy_network:
  #   external: true
  database_network:
    name: database_network
    ipam:
      driver: default
      config:
        - subnet: 172.18.2.0/28
          gateway: 172.18.2.14
  monit_network:
    name: monit_network
    ipam:
      driver: default
      config:
        - subnet: 172.18.2.16/28
          gateway: 172.18.2.30
  cloud_network:
    name: cloud_network
    ipam:
      driver: default
      config:
        - subnet: 172.18.2.32/28
          gateway: 172.18.2.46
  firefly_network:
    name: firefly_network
    ipam:
      driver: default
      config:
        - subnet: 172.18.2.48/29
          gateway: 172.18.2.54
  bookstack_network:
    name: bookstack_network
    ipam:
      driver: default
      config:
        - subnet: 172.18.2.56/29
          gateway: 172.18.2.62
  gitea_network:
    name: gitea_network
    ipam:
      driver: default
      config:
        - subnet: 172.18.2.64/29
          gateway: 172.18.2.70
  tandoor_network:
    name: tandoor_network
    ipam:
      driver: default
      config:
        - subnet: 172.18.2.72/29
          gateway: 172.18.2.78
  mangatagger_network:
    name: mangatagger_network
    ipam:
      driver: default
      config:
        - subnet: 172.18.2.80/29
          gateway: 172.18.2.86
  paperless_network:
    name: paperless_network
    ipam:
      driver: default
      config:
        - subnet: 172.18.2.88/29
          gateway: 172.18.2.94
  immich_network:
    name: immich_network
    ipam:
      driver: default
      config:
        - subnet: 172.18.2.96/28
          gateway: 172.18.2.110
  kaizoku_network:
    name: kaizoku_network
    ipam:
      driver: default
      config:
        - subnet: 172.18.2.112/29
          gateway: 172.18.2.118
  outline_network:
    name: outline_network
    ipam:
      driver: default
      config:
        - subnet: 172.18.2.120/29
          gateway: 172.18.2.126
  wakapi_network:
    name: wakapi_network
    ipam:
      driver: default
      config:
        - subnet: 172.18.2.136/29
          gateway: 172.18.2.142
  gamevault_network:
    name: gamevault_network
    ipam:
      driver: default
      config:
        - subnet: 172.18.2.152/29
          gateway: 172.18.2.158
  linkwarden_network:
    name: linkwarden_network
    ipam:
      driver: default
      config:
        - subnet: 172.18.2.176/29
          gateway: 172.18.2.182